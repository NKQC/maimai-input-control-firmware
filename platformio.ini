; PlatformIO Project Configuration File
;
; Build options: build flags, source filter
; Upload options: custom upload port, speed and extra flags
; Library options: dependencies, extra library storages
; Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = pico

[env:pico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino

; Board configuration
board_build.mcu = rp2040
board_build.f_cpu = 133000000L
board_build.core = earlephilhower
board_build.filesystem_size = 1m
board_upload.maximum_size = 2097152
board_upload.maximum_ram_size = 262144

; Build flags
build_flags = 
    -DBOARD_HAS_PSRAM
    -DARDUINO_RASPBERRY_PI_PICO
    -DPICO_DEFAULT_UART=0
    -DPICO_DEFAULT_UART_TX_PIN=0
    -DPICO_DEFAULT_UART_RX_PIN=1
    -DPICO_DEFAULT_I2C=0
    -DPICO_DEFAULT_I2C_SDA_PIN=4
    -DPICO_DEFAULT_I2C_SCL_PIN=5
    -DPICO_DEFAULT_SPI=0
    -DPICO_DEFAULT_SPI_SCK_PIN=18
    -DPICO_DEFAULT_SPI_TX_PIN=19
    -DPICO_DEFAULT_SPI_RX_PIN=16
    -DPICO_DEFAULT_SPI_CSN_PIN=17
    -DCORE1_STACK_SIZE=8192
    -DCORE0_STACK_SIZE=8192
    -Os
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -std=c++17
    -Wno-type-limits
    -Wno-sign-compare
    -I.
    -Wall
    -Wextra
    -Wno-unused-parameter
    -Wno-missing-field-initializers
    -fno-rtti
    -fno-exceptions
    -ffast-math
    -funroll-loops
    -DLVGL_CONF_INCLUDE_SIMPLE
    -DLV_CONF_INCLUDE_SIMPLE
    -DLV_MEM_CUSTOM=1
    -DLV_TICK_CUSTOM=1
    -DLV_COLOR_DEPTH=16
    -DLV_COLOR_16_SWAP=1
    -DLV_USE_PERF_MONITOR=1
    -DLV_USE_MEM_MONITOR=1
    -DLV_USE_LOG=1
    -DLV_LOG_LEVEL=LV_LOG_LEVEL_INFO

; Upload configuration
upload_protocol = picotool
monitor_speed = 115200
monitor_filters = 
    colorize
    time
    log2file

; Library dependencies
lib_deps = 
    adafruit/Adafruit NeoPixel@^1.11.0
    adafruit/Adafruit GFX Library@^1.11.5
    adafruit/Adafruit ST7735 and ST7789 Library@^1.10.0
    lvgl/lvgl@^8.3.6
    bblanchon/ArduinoJson@^6.21.2
    Wire
    SPI

; Source filter
src_filter = 
    +<*>
    -<.git/>
    -<.svn/>
    -<example/>
    -<examples/>
    -<test/>
    -<tests/>

; Debug configuration
debug_tool = cmsis-dap
debug_init_break = tbreak setup
debug_build_flags = 
    -DDEBUG=1
    -DDEBUG_ESP_PORT=Serial
    -g3
    -O0

; Test configuration
test_framework = unity
test_build_flags = 
    -DUNIT_TEST
    -std=c++17

; Library build options
lib_archive = false
lib_ldf_mode = deep+
lib_compat_mode = strict

; Monitor configuration
monitor_echo = yes
monitor_eol = CRLF
monitor_raw = no
monitor_rts = 0
monitor_dtr = 0

; Advanced options
check_tool = cppcheck, clangtidy
check_flags = 
    cppcheck: --enable=all --std=c++17
    clangtidy: --checks=-*,readability-*,performance-*,modernize-*

; Different build environments
[env:pico_debug]
extends = env:pico
build_type = debug
build_flags = 
    ${env:pico.build_flags}
    -DDEBUG=1
    -DCORE_DEBUG_LEVEL=5
    -g3
    -O0

[env:pico_release]
extends = env:pico
build_type = release
build_flags = 
    ${env:pico.build_flags}
    -DNDEBUG=1
    -DCORE_DEBUG_LEVEL=0
    -O3
    -flto

[env:pico_test]
extends = env:pico
build_flags = 
    ${env:pico.build_flags}
    -DUNIT_TEST=1
    -DTEST_MODE=1
test_filter = 
    test_*
src_filter = 
    +<test/>
    +<src/>
    -<src/main.cpp>